setwd("~/GitHub/Chionomys-nivalis-analysis")
files_pluviometro <- list.files("Dati-originali\\dati_meteo_vda\\", pattern=".*Grand-Crot-Pluviometro.csv", recursive=TRUE, full.names=TRUE)
temperatura_grand_crot = do.call(rbind, lapply(files_termometro, function(x) read.csv(x, dec=",", sep=";", header = TRUE )))
setwd("~/GitHub/Chionomys-nivalis-analysis/Analisi Tesi/Data")
```{r}
files_termometro <- list.files("Dati-originali\\dati_meteo_vda\\", pattern=".*Grand-Crot-Termometro.csv", recursive=TRUE, full.names=TRUE)
setwd("~/GitHub/Chionomys-nivalis-analysis/Analisi Tesi/Data")
files_termometro <- list.files("Dati-originali\\dati_meteo_vda\\", pattern=".*Grand-Crot-Termometro.csv", recursive=TRUE, full.names=TRUE)
files_pluviometro <- list.files("Dati-originali\\dati_meteo_vda\\", pattern=".*Grand-Crot-Pluviometro.csv", recursive=TRUE, full.names=TRUE)
precipitazioni_grand_crot <- do.call(rbind, lapply(files_pluviometro, function(x) read.csv(x, dec=",", sep=";", header = TRUE )))
temperatura_grand_crot = do.call(rbind, lapply(files_termometro, function(x) read.csv(x, dec=",", sep=";", header = TRUE )))
tail(temp_prec_grand_crot)
temp_prec_grand_crot <- cbind(precipitazioni_grand_crot,temperatura_grand_crot$temperatura)
tail(temp_prec_grand_crot)
tail(temp_prec_grand_crot)
temp_prec_grand_crot["Orario_R"] <- strftime(as.POSIXct(temp_prec_grand_crot$orario, format="%d/%m/%Y %H:%M", tz = "Europe/Rome"), format="%H:%M")
temp_prec_grand_crot["Data_R"]   <- strftime(as.POSIXct(temp_prec_grand_crot$orario, format="%d/%m/%Y %H:%M", tz = "Europe/Rome"), format="%d-%m-%Y")
temp_prec_grand_crot <- subset( temp_prec_grand_crot, select = -orario)
tail(temp_prec_grand_crot)
colnames(temp_prec_grand_crot) <- c("Precipitazioni","Temperatura.C","Orario.R","Data.R")
tail(temp_prec_grand_crot)
write.csv2(temp_prec_grand_crot,"Dati-elaborati\\Dati_precip-temp_grand-crot.csv", row.names = FALSE)
# CSV Raccolta dati
Daticatt <- read.csv("Dati-originali/daticatture.csv", dec=",", sep=";", header = TRUE)
Datitrap <- read.csv("Dati-originali/datitrappole.csv", dec=",", sep=";", header = TRUE)
Datioccas <- read.csv("Dati-originali/sforzocampionamento.csv", dec=",", sep=";", header = TRUE)
# CSV Meteo
temp_prec_grand_crot <- read.csv("Dati-elaborati\\Dati_precip-temp_grand-crot.csv", dec=",", sep=";", header = TRUE)
# Convertiamo i dati con un formato riconoscibile da R
temp_prec_grand_crot["Data.R"]   <- as.Date(temp_prec_grand_crot$Data.R, format="%d-%m-%Y")
head(temp_prec_grand_crot)
# Rimuoviamo le righe che non hanno un ID_TRAP - problema in fase di export da Excel
Datitrap <- Datitrap[!is.na(Datitrap$ID_TRAP), ]
# Convertiamo la copertura vegetale in ottavi
Datitrap$Cop_Veg_2015_ottavi <- Datitrap$X..COP..VEG..2015 / 100*8
Datitrap$Cop_Veg_2018_ottavi <- Datitrap$X..COP..VEG..2018 / 100*8
head(Datitrap)
head(Datioccas)
head(Datioccas)
head(Daticatt)
Daticatt[Daticatt==""] <- NA
Daticatt[Daticatt=="IND"] <- NA
# Verifichiamo errori nella colonna relativa all'alba
errori  <- subset(Daticatt,ALBA != "A" & ALBA != "T")
if (nrow(errori) > 0) {
print("ATTENZIONE: Valori spuri")
errori
}
head(Daticatt)
Daticatt["Data_R"] <- as.Date(Daticatt$DATA, "%d/%m/%Y")
Daticatt["Anno"] <- format(Daticatt["Data_R"],"%Y")
# Eliminiamo la vecchia colonna Data
Daticatt <- subset( Daticatt, select = -DATA)
mergedData <- merge(Daticatt, Datitrap, by.x=c("ID_TRAPPOLA"), by.y=c("ID_TRAP"))
write.csv2(Daticatt,"Dati-elaborati\\Dati-catture.csv", row.names = FALSE)
write.csv2(Datitrap,"Dati-elaborati\\Dati-trappole.csv", row.names = FALSE)
write.csv2(Datioccas,"Dati-elaborati\\Dati-occasioni.csv", row.names = FALSE)
write.csv2(mergedData,"Dati-elaborati\\Dati-catture-trappole.csv", row.names = FALSE)
head(dati.cov)
### creiamo anche un dataframe che includono le covariate
head(Datitrap[ ,c(9:14,17:18,22)])
dati.cov <- Datitrap[,c(9:14,17:18,22)]
head(dati.cov)
write.csv2(dati.cov,"Dati-elaborati\\Dati-cov.csv", row.names=FALSE)
Datioccas <- read.csv("Dati-elaborati\\Dati-occasioni.csv", dec=",", sep=";", header = TRUE)
Daticatt <- read.csv("Dati-elaborati\\Dati-catture.csv", dec=",", sep=";", header = TRUE)
Datioccas <- read.csv("Dati-elaborati\\Dati-occasioni.csv", dec=",", sep=";", header = TRUE)
create_detection_matrix <- function(anno, sessione) {
# Seleziona l'anno e la sessione dai file di occasioni e catture
print(paste0(anno, " - ",sessione))
Datioccas_ <- Datioccas[Datioccas$Anno == anno & Datioccas$sessione == sessione ,]
Daticatt_ <- Daticatt[Daticatt$Anno == anno & Daticatt$sessione == sessione ,]
if (nrow(Datioccas_) == 0 | nrow(Daticatt_) == 0) {
print("Dati non disponibili.")
return(NULL)
}
# Crea un dataframe vuoto in cui inserire la relazione tra occasioni e trappole
print(max(Datioccas_$occasione))
occupancy_ncols <- max(Datioccas_$occasione) + 1
#occupancy_nrows <- max(Datioccas_$trappole.posizionate)
#occupancy_nrows <- nrow(1:75)
m <- matrix(0, ncol = occupancy_ncols, nrow = 75)
occupancy_occasioni <- data.frame(m)
# Da un nome ad ogni variabile occasione ed aggiunge la variabile ID_TRAP
colnames(occupancy_occasioni) <- c("ID_TRAP",paste0("occ ", 1:max(Datioccas_$occasione)))
occupancy_occasioni$ID_TRAP <- seq.int(nrow(occupancy_occasioni))
# Riempi la matrice con i valori dicotomici (1 indica almeno una cattura, 0 indica l'assenza di catture)
for (cattura in c(1:nrow(Daticatt_))) {
trappola <- as.numeric(as.character(Daticatt_[cattura,]$ID_TRAPPOLA))
occasione <- Daticatt_[cattura,]$occasione
occupancy_occasioni[trappola, paste0("occ ", occasione)] <- 1
}
result <- occupancy_occasioni
}
for (anno in unique(Daticatt$Anno)) {
dati_anno <- Daticatt[Daticatt$Anno == anno,]
for (sessione in unique(dati_anno$sessione)) {
matrice_detection <- NULL
matrice_detection <- create_detection_matrix(anno, sessione)
if (!is.null(matrice_detection)) {
write.csv2(matrice_detection, paste0("Dati-detection-history\\Detection-Anno_",anno,"_Sessione_",sessione,".csv"), row.names = FALSE)
}
}
}
# install.packages("unmarked")
library(dplyr)
library(readr)
library(unmarked)
require(stats4)
require(parallel)
#### utilizziamo i dati relativi alle occasioni giÃ  elaborato
Datioccas <- read.csv("Dati-elaborati/Dati-occasioni.csv", dec=",", sep=";", header = TRUE)
tail(Datioccas)
#### Inserire l'anno su cui si vuole effettuare l'analisi es. =="2014", "2015", ecc
anno_int <- Datioccas$Anno=="2018"
Datioccas_ <- subset(Datioccas,Datioccas$Anno=="2018" )
albatramonto_singola <- as.data.frame(t(select(Datioccas, ALBA..A.T.)))
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1, max(Datioccas_$trappole.posizionate)), ])
#### Inserire l'anno su cui si vuole effettuare l'analisi es. =="2014", "2015", ecc
anno_int <- Datioccas$Anno=="2018"
Datioccas_ <- subset(Datioccas,Datioccas$Anno=="2018" )
albatramonto_singola <- as.data.frame(t(select(Datioccas, ALBA..A.T.)))
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1, max(Datioccas_$trappole.posizionate)), ])
#### Inserire l'anno su cui si vuole effettuare l'analisi es. =="2014", "2015", ecc
anno_int <- Datioccas$Anno=="2018"
Datioccas_ <- subset(Datioccas,anno_int )
albatramonto_singola <- as.data.frame(t(select(Datioccas, ALBA..A.T.)))
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1, max(Datioccas_$trappole.posizionate)), ])
#### Inserire l'anno su cui si vuole effettuare l'analisi es. =="2014", "2015", ecc
anno_int <- Datioccas$Anno=="2018"
Datioccas_ <- subset(Datioccas,anno_int )
albatramonto_singola <- as.data.frame(t(select(Datioccas, ALBA..A.T.)))
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1, max(Datioccas_$trappole.posizionate), ])
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1, max(Datioccas_$trappole.posizionate)), ])
#### Inserire l'anno su cui si vuole effettuare l'analisi es. =="2014", "2015", ecc
anno_int <- Datioccas$Anno=="2018"
Datioccas_ <- subset(Datioccas,anno_int )
albatramonto_singola <- as.data.frame(t(select(Datioccas, ALBA..A.T.)))
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1, max(Datioccas_$trappole.posizionate)), ]length.out = NA)
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1, max(Datioccas_$trappole.posizionate)), ])
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1:max(Datioccas_$trappole.posizionate)), ])
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1,max(Datioccas_$trappole.posizionate)), ])
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola(rep(1,max(Datioccas_$trappole.posizionate)), ))
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1,max(Datioccas_$trappole.posizionate)),])
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1,max(Datioccas_$trappole.posizionate))])
#### Inserire l'anno su cui si vuole effettuare l'analisi es. =="2014", "2015", ecc
anno_int <- Datioccas$Anno=="2018"
Datioccas_ <- subset(Datioccas,anno_int )
albatramonto_singola <- as.data.frame(t(select(Datioccas, ALBA..A.T.)))
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1,75)), ])
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1,max(Datioccas$trappole.posizionate)), ])
#### Inserire l'anno su cui si vuole effettuare l'analisi es. =="2014", "2015", ecc
anno_int <- Datioccas$Anno=="2018"
Datioccas_ <- subset(Datioccas,anno_int )
albatramonto_singola <- as.data.frame(t(select(Datioccas, ALBA..A.T.)))
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1,max(Datioccas$trappole.posizionate)), ])
head(AlbaTramonto)
#### Creiamo una matrice relativa all'Alba o Tramonto, tenendo conto di selezionare le variabili (colonne) riguardanti l'anno di interesse
alba <- as.matrix(AlbaTramonto[1:max(Datioccas_$trappole.posizionate),114:148])
rownames(alba)<-c(1:max(Datioccas$trappole.posizionate))
#### Creiamo una matrice relativa all'Alba o Tramonto, tenendo conto di selezionare le variabili (colonne) riguardanti l'anno di interesse
alba <- as.matrix(AlbaTramonto[1:max(Datioccas_$trappole.posizionate),114:148])
#### Creiamo una matrice relativa all'Alba o Tramonto, tenendo conto di selezionare le variabili (colonne) riguardanti l'anno di interesse
alba <- as.matrix(AlbaTramonto[1:max(Datioccas$trappole.posizionate),114:148])
rownames(alba)<-c(1:max(Datioccas$trappole.posizionate))
head(alba)
#### ripetiamo gli step per quanto riguarda le precipitazioni
Datioccas_ <- subset(Datioccas,anno_int)
precip <- as.data.frame(t(select(Datioccas, Precipitazioni)))
precipitazioni <- rbind(precip, precip[rep(1, max(Datioccas$trappole.posizionate)), ])
#### ripetiamo gli step per quanto riguarda le precipitazioni
Datioccas_ <- subset(Datioccas,anno_int)
precip <- as.data.frame(t(select(Datioccas, Precipitazioni)))
#### ripetiamo gli step per quanto riguarda le precipitazioni
Datioccas_ <- subset(Datioccas,anno_int)
precip <- as.data.frame(t(select(Datioccas_, Precipitazioni)))
#### ripetiamo gli step per quanto riguarda le precipitazioni
Datioccas_ <- subset(Datioccas,anno_int)
precip <- as.data.frame(t(select(Datioccas, Precipitazioni)))
#### ripetiamo gli step per quanto riguarda le precipitazioni
Datioccas_ <- subset(Datioccas,anno_int)
precip <- as.data.frame(t(select(Datioccas, Precipitazioni)))
write.csv2(dati.cov,"Dati-elaborati\\Dati-cov.csv", row.names=FALSE)
write.csv2(dati.cov,"Dati-elaborati/Dati-cov.csv", row.names=FALSE)
write.csv2(Daticatt,"Dati-elaborati\\Dati-catture.csv", row.names = FALSE)
#### ripetiamo gli step per quanto riguarda le precipitazioni
Datioccas_ <- subset(Datioccas,anno_int)
precip <- as.data.frame(t(select(Datioccas, Precipitazioni)))
write.csv2(temp_prec_grand_crot,"Data\\nuovifilei\\Dati_precip-temp_grand-crot.csv", row.names = FALSE)
write.csv2(temp_prec_grand_crot,file="Dati_precip-temp_grand-crot.csv", row.names = FALSE)
write.csv2(temp_prec_grand_crot,file="Data\nuovifile\Dati_precip-temp_grand-crot.csv", row.names = FALSE)
write.csv2(temp_prec_grand_crot,file="Data\Dati_precip-temp_grand-crot.csv", row.names = FALSE)
write.csv2(temp_prec_grand_crot,file="Data/Dati_precip-temp_grand-crot.csv", row.names = FALSE)
write.csv2(temp_prec_grand_crot,file="Data/nuovifile/Dati_precip-temp_grand-crot.csv", row.names = FALSE)
write.csv2(Daticatt,file="Data/nuovifile/Dati-catture.csv", row.names = FALSE)
write.csv2(Datitrap,file="Data/nuovifile/Dati-trappole.csv", row.names = FALSE)
write.csv2(Datioccas,file="Data/nuovifile/Dati-occasioni.csv", row.names = FALSE)
write.csv2(mergedData,file="Data/nuovifile/Dati-catture-trappole.csv", row.names = FALSE)
write.csv2(dati.cov,file="Data/nuovifile/Dati-cov.csv", row.names=FALSE)
for (anno in unique(Daticatt$Anno)) {
dati_anno <- Daticatt[Daticatt$Anno == anno,]
for (sessione in unique(dati_anno$sessione)) {
matrice_detection <- NULL
matrice_detection <- create_detection_matrix(anno, sessione)
if (!is.null(matrice_detection)) {
write.csv2(matrice_detection, paste0("Dati-detection-history\\Detection-Anno_",anno,"_Sessione_",sessione,".csv"), row.names = FALSE)
}
}
}
for (anno in unique(Daticatt$Anno)) {
dati_anno <- Daticatt[Daticatt$Anno == anno,]
for (sessione in unique(dati_anno$sessione)) {
matrice_detection <- NULL
matrice_detection <- create_detection_matrix(anno, sessione)
if (!is.null(matrice_detection)) {
write.csv2(matrice_detection, paste0(file="Data/nuovifile/detection/Detection-Anno_",anno,"_Sessione_",sessione,".csv"), row.names = FALSE)
}
}
}
Daticatt <- read.csv("Dati-elaborati\\Dati-catture.csv", dec=",", sep=";", header = TRUE)
Daticatt <- read.csv("nuovifile\\Dati-catture.csv", dec=",", sep=";", header = TRUE)
Daticatt <- read.csv("nuovifile\Dati-catture.csv", dec=",", sep=";", header = TRUE)
Daticatt <- read.csv("nuovifile/Dati-catture.csv", dec=",", sep=";", header = TRUE)
Daticatt <- read.csv("Data/nuovifile/Dati-catture.csv", dec=",", sep=";", header = TRUE)
Datioccas <- read.csv("Data/nuovifile/Dati-occasioni.csv", dec=",", sep=";", header = TRUE)
create_detection_matrix <- function(anno, sessione) {
# Seleziona l'anno e la sessione dai file di occasioni e catture
print(paste0(anno, " - ",sessione))
Datioccas_ <- Datioccas[Datioccas$Anno == anno & Datioccas$sessione == sessione ,]
Daticatt_ <- Daticatt[Daticatt$Anno == anno & Daticatt$sessione == sessione ,]
if (nrow(Datioccas_) == 0 | nrow(Daticatt_) == 0) {
print("Dati non disponibili.")
return(NULL)
}
# Crea un dataframe vuoto in cui inserire la relazione tra occasioni e trappole
print(max(Datioccas_$occasione))
occupancy_ncols <- max(Datioccas_$occasione) + 1
#occupancy_nrows <- max(Datioccas_$trappole.posizionate)
#occupancy_nrows <- nrow(1:75)
m <- matrix(0, ncol = occupancy_ncols, nrow = 75)
occupancy_occasioni <- data.frame(m)
# Da un nome ad ogni variabile occasione ed aggiunge la variabile ID_TRAP
colnames(occupancy_occasioni) <- c("ID_TRAP",paste0("occ ", 1:max(Datioccas_$occasione)))
occupancy_occasioni$ID_TRAP <- seq.int(nrow(occupancy_occasioni))
# Riempi la matrice con i valori dicotomici (1 indica almeno una cattura, 0 indica l'assenza di catture)
for (cattura in c(1:nrow(Daticatt_))) {
trappola <- as.numeric(as.character(Daticatt_[cattura,]$ID_TRAPPOLA))
occasione <- Daticatt_[cattura,]$occasione
occupancy_occasioni[trappola, paste0("occ ", occasione)] <- 1
}
result <- occupancy_occasioni
}
for (anno in unique(Daticatt$Anno)) {
dati_anno <- Daticatt[Daticatt$Anno == anno,]
for (sessione in unique(dati_anno$sessione)) {
matrice_detection <- NULL
matrice_detection <- create_detection_matrix(anno, sessione)
if (!is.null(matrice_detection)) {
write.csv2(matrice_detection, paste0(file="Data/nuovifile/detection/Detection-Anno_",anno,"_Sessione_",sessione,".csv"), row.names = FALSE)
}
}
}
for (anno in unique(Daticatt$Anno)) {
dati_anno <- Daticatt[Daticatt$Anno == anno,]
for (sessione in unique(dati_anno$sessione)) {
matrice_detection <- NULL
matrice_detection <- create_detection_matrix(anno, sessione)
if (!is.null(matrice_detection)) {
write.csv2(matrice_detection, paste0(file="Data\\nuovifile\\detection/Detection-Anno_",anno,"_Sessione_",sessione,".csv"), row.names = FALSE)
}
}
}
for (anno in unique(Daticatt$Anno)) {
dati_anno <- Daticatt[Daticatt$Anno == anno,]
for (sessione in unique(dati_anno$sessione)) {
matrice_detection <- NULL
matrice_detection <- create_detection_matrix(anno, sessione)
if (!is.null(matrice_detection)) {
write.csv2(matrice_detection, paste0(file="Data/nuovifile/detection/Detection-Anno_",anno,"_Sessione_",sessione,".csv"), row.names = FALSE)
}
}
}
for (anno in unique(Daticatt$Anno)) {
dati_anno <- Daticatt[Daticatt$Anno == anno,]
for (sessione in unique(dati_anno$sessione)) {
matrice_detection <- NULL
matrice_detection <- create_detection_matrix(anno, sessione)
if (!is.null(matrice_detection)) {
write.csv2(matrice_detection, paste0(file="/detection/Detection-Anno_",anno,"_Sessione_",sessione,".csv"), row.names = FALSE)
}
}
}
for (anno in unique(Daticatt$Anno)) {
dati_anno <- Daticatt[Daticatt$Anno == anno,]
for (sessione in unique(dati_anno$sessione)) {
matrice_detection <- NULL
matrice_detection <- create_detection_matrix(anno, sessione)
if (!is.null(matrice_detection)) {
write.csv2(matrice_detection, paste0(file="/nuovifile/detection/Detection-Anno_",anno,"_Sessione_",sessione,".csv"), row.names = FALSE)
}
}
}
# install.packages("unmarked")
library(dplyr)
library(readr)
library(unmarked)
require(stats4)
require(parallel)
#### utilizziamo i dati relativi alle occasioni giÃ  elaborato
Datioccas <- read.csv("Data/nuovifile/Dati-occasioni.csv", dec=",", sep=";", header = TRUE)
#### utilizziamo i dati relativi alle occasioni giÃ  elaborato
Datioccas <- read.csv("Data\nuovifile\Dati-occasioni.csv", dec=",", sep=";", header = TRUE)
#### utilizziamo i dati relativi alle occasioni giÃ  elaborato
Datioccas <- read.csv("Data/nuovifile/Dati-occasioni.csv", dec=",", sep=";", header = TRUE)
#### utilizziamo i dati relativi alle occasioni giÃ  elaborato
Datioccas <- read.csv("/nuovifile/Dati-occasioni.csv", dec=",", sep=";", header = TRUE)
#### utilizziamo i dati relativi alle occasioni giÃ  elaborato
Datioccas <- read.csv("Data/nuovifile/Dati-occasioni.csv", dec=",", sep=";", header = TRUE)
#### utilizziamo i dati relativi alle occasioni giÃ  elaborato
Datioccas <- read.csv("/Data/nuovifile/Dati-occasioni.csv", dec=",", sep=";", header = TRUE)
#### utilizziamo i dati relativi alle occasioni giÃ  elaborato
Datioccas <- read.csv("Data\\nuovifile\\Dati-occasioni.csv", dec=",", sep=";", header = TRUE)
#### utilizziamo i dati relativi alle occasioni giÃ  elaborato
Datioccas <- read.csv("Dati-occasioni.csv", dec=",", sep=";", header = TRUE)
#### utilizziamo i dati relativi alle occasioni giÃ  elaborato
Datioccas <- read.csv("/Dati-occasioni.csv", dec=",", sep=";", header = TRUE)
#### utilizziamo i dati relativi alle occasioni giÃ  elaborato
Datioccas <- read.csv("\\Dati-occasioni.csv", dec=",", sep=";", header = TRUE)
#### utilizziamo i dati relativi alle occasioni giÃ  elaborato
Datioccas <- read.csv("//Dati-occasioni.csv", dec=",", sep=";", header = TRUE)
#### utilizziamo i dati relativi alle occasioni giÃ  elaborato
Datioccas <- read.csv(file="nuovifile/Dati-occasioni.csv", dec=",", sep=";", header = TRUE)
tail(Datioccas)
#### Inserire l'anno su cui si vuole effettuare l'analisi es. =="2014", "2015", ecc
anno_int <- Datioccas$Anno=="2018"
Datioccas_ <- subset(Datioccas,anno_int )
albatramonto_singola <- as.data.frame(t(select(Datioccas, ALBA..A.T.)))
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1,max(Datioccas$trappole.posizionate)), ])
head(AlbaTramonto)
#### Inserire l'anno su cui si vuole effettuare l'analisi es. =="2014", "2015", ecc
anno_int <- Datioccas$Anno=="2018"
Datioccas_ <- subset(Datioccas,anno_int )
albatramonto_singola <- as.data.frame(t(select(Datioccas, ALBA..A.T.)))
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1,max(Datioccas_$trappole.posizionate)), ])
#### Inserire l'anno su cui si vuole effettuare l'analisi es. =="2014", "2015", ecc
anno_int <- Datioccas$Anno=="2018"
Datioccas_ <- subset(Datioccas,anno_int )
albatramonto_singola <- as.data.frame(t(select(Datioccas_, ALBA..A.T.)))
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1,max(Datioccas$trappole.posizionate)), ])
head(AlbaTramonto)
#### Inserire l'anno su cui si vuole effettuare l'analisi es. =="2014", "2015", ecc
anno_int <- Datioccas$Anno=="2018"
Datioccas_ <- subset(Datioccas,anno_int )
albatramonto_singola <- as.data.frame(t(select(Datioccas_, ALBA..A.T.)))
AlbaTramonto <- rbind(albatramonto_singola, albatramonto_singola[rep(1,max(Datioccas$trappole.posizionate)), ])
head(AlbaTramonto)
View(Datioccas)
# install.packages("unmarked")
library(dplyr)
library(readr)
library(unmarked)
require(stats4)
require(parallel)
#### utilizziamo i dati relativi alle occasioni giÃ  elaborato
Datioccas <- read.csv(file="Dati-elaborati/Dati-occasioni.csv", dec=",", sep=";", header = TRUE)
tail(Datioccas)
View(Datioccas)
#### utilizziamo i dati relativi alle occasioni giÃ  elaborato
Datioccas <- read.csv(file="C:\Users\gaby\Documents\GitHub\Chionomys-nivalis-analysis\Dati-elaborati", dec=",", sep=";", header = TRUE)
#### utilizziamo i dati relativi alle occasioni giÃ  elaborato
Datioccas <- read.csv(file="C:\\Users\\gaby\\Documents\\GitHub\\Chionomys-nivalis-analysis\\Dati-elaborati", dec=",", sep=";", header = TRUE)
#### utilizziamo i dati relativi alle occasioni giÃ  elaborato
Datioccas <- read.csv(file="C://Users//gaby//Documents//GitHub//Chionomys-nivalis-analysis//Dati-elaborati", dec=",", sep=";", header = TRUE)
